package com.rssoftware.ou.model.cbs;

import java.io.Serializable;

public enum ProcessingStage implements Serializable{

	ADDR_RESL_IN_PROG(100),
	ADDR_RESL_FAILED(101),
	ADDR_RESL_COMPLETED(102),
	RISK_SCORE_IN_PROG(103),
	RISK_SCORE_FAILED(104),
	RISK_SCORE_COMPLETED(105), 
	DR_IN_PROG(106), 
	DR_FAILED(107),
	DR_COMPLETED(108), 
	DR_REVERT_IN_PROG(109),
	DR_REVERT_FAILED(110),
	DR_REVERT_COMPLETED(111),
	CR_IN_PROG(112),
	CR_FAILED(113),
	CR_COMPLETED(114),
	CR_PART_SUCCESS(115),
//	CR_REVERT_IN_PROG,
//	CR_REVERT_FAILED,
//	CR_REVERT_COMPLETED,
	DR_PART_REVERT_IN_PROG(116),
	DR_PART_REVERT_FAILED(117),
	DR_PART_REVERT_COMPLETED(118),
	RESPONSE_SUCCESS(119),
	RESPONSE_FAILED(120),
	RESPONSE_DR_REVERT_FAILED(121),
	MOVED(122),
	
	// upiint specific processing stages
	RECEIVED(0), 
	PAYER_ADDR_RESOLVED(1),
	PAYEE_ADDR_RESOLVED(2),
	PAYER_ADDR_RESL_FAILED(3),
	PAYEE_ADDR_RESL_FAILED(4),
	PAYER_PRE_APPROVED_DEBIT(5),
	REQ_PAY_SENDING_SUCCESS(6),
	REQ_PAY_SENDING_FAILURE(7),
	PAYER_ADDR_RESL_RESP_SUCCESS(8),
	PAYER_ADDR_RESL_RESP_FAILURE(9),
	PAYEE_ADDR_RESL_RESP_SUCCESS(10),
	PAYEE_ADDR_RESL_RESP_FAILURE(11),
	DEBIT_REQ_RCVD(12),
	DEBIT_IN_PROG(13),
	DEBIT_SUCCESS(14),
	DEBIT_FAILED(15),
	DEBIT_RESPONSE_SUCCESS(16),
	DEBIT_RESPONSE_FAILED(17),
	CREDIT_REQ_RCVD(18),
	CREDIT_IN_PROG(19),
	CREDIT_SUCCESS(20),
	CREDIT_FAILED(21),
	CREDIT_RESPONSE_SUCCESS(22),
	CREDIT_RESPONSE_FAILED(23),
	CREDIT_REVERSAL_REQ_RECVD(24),
	CREDIT_REVERSAL_SUCCESS(25),
	CREDIT_REVERSAL_FAILED(26),
	CREDIT_REVERSAL_RESP_SUCCESS(27),
	CREDIT_REVERSAL_RESP_FAILURE(28),
	DEBIT_REVERSAL_REQ_RECVD(29),
	DEBIT_REVERSAL_SUCCESS(30),
	DEBIT_REVERSAL_FAILED(31),
	DEBIT_REVERSAL_RESP_SUCCESS(32),
	DEBIT_REVERSAL_RESP_FAILURE(33),
	TXN_CONFIRM_REQ_RECVD(34),
	TXN_CONFIRM_RESP_SUCCESS(35),
	TXN_CONFIRM_RESP_FAILURE(36),
	TXN_SUCCESS(37),
	TXN_FAILURE(38),
	TXN_PARTIAL(39),
	TXN_USER_RESP_SUCCESS(40),
	TXN_USER_RESP_FAILED(41)
	;
	
	private int code;
	
	ProcessingStage(int code) {
		this.code = code;
	}

	/**
	 * @return the code
	 */
	public int getCode() {
		return code;
	}

	/**
	 * @param code the code to set
	 */
	private void setCode(int code) { 
		this.code = code;
	}
	
	public static ProcessingStage valueOf(int code) {
		for (ProcessingStage stage : ProcessingStage.values()) {
			if (stage.code == code)
				return stage;
		}
		return null;
	}
}
