<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- Enable Annotation based Declarative Transaction Management -->
	<tx:annotation-driven proxy-target-class="true"	transaction-manager="transactionManager" />

	<!-- Creating TransactionManager Bean, since JDBC we are creating of type DataSourceTransactionManager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- MySQL DB DataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/test" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="customerDAO" class="com.journaldev.spring.jdbc.dao.CustomerDAOImpl">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Declarative Transaction Management -->
	<bean id="customerManager" class="com.journaldev.spring.jdbc.service.CustomerManagerImpl">
		<property name="customerDAO" ref="customerDAO"></property>
	</bean>

	<!-- Programmatic Transaction Management -->
	
	<!-- using the TransactionTemplate (Recommended by Spring Team) -->
	<bean id="service" class="com.journaldev.spring.jdbc.service.ServiceImpl">    
		<constructor-arg ref="transactionManager"/>   
		<property name="customerDAO" ref="customerDAO"></property>
	</bean>
	
	<!-- Using the PlatformTransactionManager implementation directly -->
	<bean id="serviceTwo" class="com.journaldev.spring.jdbc.service.ServiceTwoImpl">    
		<property name="transactionManager" ref="transactionManager"></property>   
		<property name="customerDAO" ref="customerDAO"></property>
	</bean>
	
	
	
</beans>
