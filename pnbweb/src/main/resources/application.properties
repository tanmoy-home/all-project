#Thymeleaf mode
spring.thymeleaf.mode=LEGACYHTML5

#log level
logging.level.org.springframework.web=ERROR
logging.level.org.springframework=ERROR
logging.level.=DEBUG

logging.config=logback.xml

#port
server.port: 9090
management.port: 9091

#session timeout
session.timeout=10

#Heart beat 
heartbeat.enabled=true

#OU address
#OU address
ou.domain=https://localhost:9090
ou.tenantId=OU15

#Switch to API/UI
application.mode = UI

#Switch to BOOT/JNDI
datasource.mode = BOOT
#datasource.mode = JNDI

#Basic security
security.basic.enabled=false

#SSL configuration
server.ssl.enabled= true
server.ssl.key-store=${ou.home}/config/certificate/OU/oussl.p12
server.ssl.key-store-password=npciupi
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias=1

#spring mvc async
spring.mvc.async.request-timeout=600000

#Batch parameters
inputDirectory = ${ou.home}/batchProcessing/billFetch
outputDirectory = ${ou.home}/batchProcessing/billPayment
zeroByteFile = ZERO_BYTE_FILE

#Biller Parameters
SIMULATOR_BILL_FETCH_RESPONSE_URL = https://172.18.19.100:9090/APIService/BillerOU/urn:tenantId:OU06/process_bill_fetch_response
SIMULATOR_BILL_PAY_RESPONSE_URL = https://172.18.19.100:9090/APIService/BillerOU/urn:tenantId:OU06/process_bill_pay_response
BASIC_AUTH_CREDENTIAL=agent:password


#FOR ORACLE
bouBlrReconSQL=select t.TXN_REF_ID, t.BLR_REQUEST_JSON, t.BLR_RESPONSE_JSON, t.BLR_STATUS, t.BLR_REV_STATUS, t.MOBILE, t.TXN_DATE, t.BILL_AMOUNT from BILLEROU_TRANSACTION_DATA t where t.bou_blr_recon_processed is null AND t.TXN_TYPE='PAYMENT' AND t.CRTN_TS < SYSDATE-interval '

#FOR PGSQL
#bouBlrReconSQL=select t.TXN_REF_ID, t.BLR_REQUEST_JSON, t.BLR_RESPONSE_JSON, t.BLR_STATUS, t.BLR_REV_STATUS, t.MOBILE, t.TXN_DATE, t.BILL_AMOUNT from BILLEROU_TRANSACTION_DATA t where t.bou_blr_recon_status is null AND t.TXN_TYPE='PAYMENT' AND t.CRTN_TS < now()-interval '

#FOR ORACLE
finReconSQL=select f.TOTAL_AMOUNT, f.TXN_REF_ID,f.CRTN_TS,f.UPDT_TS,f.REQUEST_JSON,f.AUTH_CODE,f.CURRENT_STATUS,t.CURRENT_STATUS AS TXN_STATUS from fin_transaction_data f LEFT OUTER JOIN transaction_data t on t.TXN_REF_ID = f.TXN_REF_ID where f.RECON_PROCESSED is null and (t.TXN_TYPE='PAYMENT' or t.TXN_TYPE is null) AND f.CRTN_TS < SYSDATE-interval '

#FOR PGSQL
#finReconSQL=select f.TOTAL_AMOUNT, f.TXN_REF_ID,f.CRTN_TS,f.UPDT_TS,f.REQUEST_JSON,f.AUTH_CODE,f.CURRENT_STATUS,t.CURRENT_STATUS AS TXN_STATUS from fin_transaction_data f LEFT OUTER JOIN transaction_data t on t.TXN_REF_ID = f.TXN_REF_ID where f.RECON_PROCESSED is null and t.TXN_TYPE='PAYMENT' AND f.CRTN_TS < now()-interval '
secure.cookie=true